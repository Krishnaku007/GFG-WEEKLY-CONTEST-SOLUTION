class Solution {
  public:
    int countStr(int n, int k) {
        // code here
        const int MOD = 1e9 + 7;
        
        vector<int> dp0(n + 1, 0);
        vector<int> dp1(n + 1, 0);
        vector<int> sumk(n + 1, 0);
        
        dp1[0] = 1;
        sumk[0] = 1;
        
        for(int i = 1; i <= n; ++i){
            
            dp1[i] = (dp0[i-1] + dp1[i-1]) % MOD;
            
            if ( i>= k){
                sumk[i] = (dp1[i] + sumk[i - k]) % MOD;
            } else{
                sumk[i] = dp1[i] % MOD;
            }
            
            if(i >= k){
                dp0[i] = sumk[i -k] % MOD;
            }else{
                dp0[i] = 0;
            }
        }
        
        return ( dp0[n] + dp1[n]) % MOD;
        
    }
};
